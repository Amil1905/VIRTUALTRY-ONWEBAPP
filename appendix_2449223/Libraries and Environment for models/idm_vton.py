# -*- coding: utf-8 -*-
"""IDM_VTON.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qip4kxZbRBIZYNH7zJ3Z-M6OETXLNHfA
"""

!pip install torch==2.0.1+cu118 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
!pip install diffusers==0.25.0
!pip install accelerate==0.25.0
!pip install transformers==4.36.2
!pip install opencv-python einops gradio cloudpickle omegaconf pycocotools basicsr av onnxruntime
!pip install git+https://github.com/facebookresearch/fvcore.git

from google.colab import drive
drive.mount('/content/drive')

!git clone https://github.com/yisol/IDM-VTON.git

!pip install huggingface-hub

!huggingface-cli login

!pip install torch==2.0.1 torchvision==0.15.2 torchaudio==2.0.2 --extra-index-url https://download.pytorch.org/whl/cu118

!pip install accelerate==0.25.0 torchmetrics==1.2.1 tqdm==4.66.1 \
transformers==4.36.2 diffusers==0.25.0 einops==0.7.0 bitsandbytes==0.39.0 \
scipy==1.11.1 opencv-python gradio==4.24.0 fvcore cloudpickle omegaconf \
pycocotools basicsr av onnxruntime==1.16.2

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/IDM-VTON/

!ls /content/drive/MyDrive/IDM-VTON/

!cp -r /content/IDM-VTON /content/drive/MyDrive/IDM-VTON/

!ls /content/drive/MyDrive/

!ls /content/drive/MyDrive/IDM-VTON/

!git clone https://huggingface.co/yisol/IDM-VTON

!git lfs install

!git clone https://huggingface.co/spaces/yisol/IDM-VTON

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/IDM-VTON
!unzip /content/drive/MyDrive/IDM-VTON/zalando-hd-resized.zip -d data

!cp -r /content/drive/MyDrive/IDM-VTON/ckpt/* IDM-VTON/ckpt/

!mv /content/drive/MyDriv/IDM-VTON/IDM-VTON/* IDM-VTON/
!rm -rf IDM-VTON/IDM-VTON

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/IDM-VTON/

!ls

!mv IDM-VTON/* .

!rmdir IDM-VTON

# Ortam hazÄ±rlÄ±ÄŸÄ±
!pip install -U diffusers==0.25.0 accelerate==0.25.0 transformers==4.36.2 einops==0.7.0 scipy==1.11.1 opencv-python gradio==4.24.0 fvcore cloudpickle omegaconf pycocotools basicsr av onnxruntime==1.16.2 torchmetrics==1.2.1 tqdm==4.66.1

# bitsandbytes'i kaldÄ±r (inference iÃ§in gerekmez)
!pip uninstall -y bitsandbytes

!pip uninstall -y bitsandbytes

!rm -rf /usr/local/lib/python*/dist-packages/bitsandbytes*

!ls l

!pwd

import time
from pathlib import Path

PAIR_FILE = Path("data/test_pairs.txt")

print("ðŸš€ Inference watcher baÅŸladÄ±â€¦")

while True:
    if PAIR_FILE.exists():
        content = PAIR_FILE.read_text().strip()
        if content:
            print(f"ðŸ§ª Yeni Ã§ift bulundu: {content}")
            # inference Ã§alÄ±ÅŸtÄ±r
            !accelerate launch inference.py \
                --width 768 \
                --height 1024 \
                --num_inference_steps 20 \
                --output_dir newresult \
                --unpaired \
                --data_dir data \
                --seed 42 \
                --test_batch_size 1 \
                --guidance_scale 2.0 \
                --mixed_precision fp16

            print("âœ… Inference tamamlandÄ±.")
            PAIR_FILE.write_text("")  # test_pairs.txtâ€™yi sÄ±fÄ±rla
        else:
            time.sleep(2)  # dosya boÅŸ, bekle
    else:
        time.sleep(2)  # dosya yok, bekle

!accelerate launch inference.py --width 768 --height 1024 --num_inference_steps 20 --output_dir result --unpaired --data_dir data --seed 42 --test_batch_size 1 --guidance_scale 2.0 --mixed_precision fp16

!pip install accelerate==0.25.0 diffusers==0.25.0 transformers==4.36.2 peft==0.6.2 --upgrade

!pip install huggingface_hub==0.20.3

!uvicorn mainidm:app --host 0.0.0.0 --port 8080

!pip install fastapi uvicorn python-multipart pyngrok

from pyngrok import ngrok

# buraya kendi tokenini yapÄ±ÅŸtÄ±r
ngrok.set_auth_token("30HDwb49X1y497gBhVRqkdaNI8U_kymejySjXo5K7NJsRvt2")

import nest_asyncio
nest_asyncio.apply()

from pyngrok import ngrok

# start uvicorn in background
import uvicorn
from threading import Thread

def run():
    uvicorn.run("mainidm:app", host="0.0.0.0", port=5022)

thread = Thread(target=run, daemon=True)
thread.start()

# start ngrok
public_url = ngrok.connect(5022)
print(f"ðŸš€ Public URL: {public_url}")

import nest_asyncio
nest_asyncio.apply()

from pyngrok import ngrok
import uvicorn
from threading import Thread
import sys

# sys.pathâ€™e dosyanÄ±n bulunduÄŸu dizini ekle
sys.path.append("/content/drive/MyDrive/IDM-VTON/new.py")

def run():
    uvicorn.run("new:app", host="0.0.0.0", port=5015)

thread = Thread(target=run, daemon=True)
thread.start()

public_url = ngrok.connect(5015)
print(f"ðŸš€ Public URL: {public_url}")

!ls -l data/test_pairs.txt
!cat data/test_pairs.txt

!cat tryon_debug.log

!pwd

!cd /content/drive/MyDrive/IDM-VTON

!pkill -f ngrok

!uvicorn mainidm:app --host 0.0.0.0 --port 5000

!uvicorn --version

!kill -9 <pid>

!python3 inference.py --help

!python inference.py --help

!python mainidm.py

!python3 main.py

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/IDM-VTON/

# (gerekirse)
!pip install -q lpips scikit-image psutil torchvision pillow accelerate pandas

!python evaluation.py \
  --limit 100 \
  --steps 20 \
  --width 768 --height 1024 \
  --batch_size 1 \
  --mixed_precision fp16

!python3 main2.py

!pip install psutil torch pillow scikit-image numpy

!pip install lpips

!pip install lpips torchvision
!pip install scikit-image psutil
!pip install opencv-python
!pip install pynvml